[{"C:\\Users\\Ilyris\\Desktop\\big_market_app\\src\\index.js":"1","C:\\Users\\Ilyris\\Desktop\\big_market_app\\src\\reportWebVitals.js":"2","C:\\Users\\Ilyris\\Desktop\\big_market_app\\src\\App.js":"3","C:\\Users\\Ilyris\\Desktop\\big_market_app\\src\\ScrollToTop.jsx":"4","C:\\Users\\Ilyris\\Desktop\\big_market_app\\src\\components\\footer\\Footer.jsx":"5","C:\\Users\\Ilyris\\Desktop\\big_market_app\\src\\components\\menus\\DesktopMenu.jsx":"6","C:\\Users\\Ilyris\\Desktop\\big_market_app\\src\\custom_hooks\\useScrollPosition.jsx":"7","C:\\Users\\Ilyris\\Desktop\\big_market_app\\src\\reused_components\\PrimaryButton.jsx":"8","C:\\Users\\Ilyris\\Desktop\\big_market_app\\src\\components\\home_page\\HomePage.jsx":"9","C:\\Users\\Ilyris\\Desktop\\big_market_app\\src\\reused_components\\SideBar.jsx":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":1249,"mtime":1607930584448,"results":"14","hashOfConfig":"12"},{"size":256,"mtime":1607924106230,"results":"15","hashOfConfig":"12"},{"size":3202,"mtime":1607923885301,"results":"16","hashOfConfig":"12"},{"size":4735,"mtime":1607929933829,"results":"17","hashOfConfig":"12"},{"size":1191,"mtime":1607924375301,"results":"18","hashOfConfig":"12"},{"size":1360,"mtime":1607924441057,"results":"19","hashOfConfig":"12"},{"size":2882,"mtime":1607931045498,"results":"20","hashOfConfig":"12"},{"size":1179,"mtime":1607931623578,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"p3rkw3",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Ilyris\\Desktop\\big_market_app\\src\\index.js",[],["44","45"],"C:\\Users\\Ilyris\\Desktop\\big_market_app\\src\\reportWebVitals.js",[],"C:\\Users\\Ilyris\\Desktop\\big_market_app\\src\\App.js",[],"C:\\Users\\Ilyris\\Desktop\\big_market_app\\src\\ScrollToTop.jsx",[],"C:\\Users\\Ilyris\\Desktop\\big_market_app\\src\\components\\footer\\Footer.jsx",[],"C:\\Users\\Ilyris\\Desktop\\big_market_app\\src\\components\\menus\\DesktopMenu.jsx",["46","47","48"],"C:\\Users\\Ilyris\\Desktop\\big_market_app\\src\\custom_hooks\\useScrollPosition.jsx",["49"],"import { useRef, useLayoutEffect } from 'react'\r\n\r\nconst isBrowser = typeof window !== `undefined`\r\n\r\nfunction getScrollPosition({ element, useWindow }) {\r\n  if (!isBrowser) return { x: 0, y: 0 }\r\n\r\n  const target = element ? element.current : document.body\r\n  const position = target.getBoundingClientRect()\r\n\r\n  return useWindow\r\n    ? { x: window.scrollX, y: window.scrollY }\r\n    : { x: position.left, y: position.top }\r\n}\r\n\r\nexport function useScrollPosition(effect, deps, element, useWindow, wait) {\r\n  const position = useRef(getScrollPosition({ useWindow }))\r\n\r\n  let throttleTimeout = null\r\n\r\n  const callBack = () => {\r\n    const currPos = getScrollPosition({ element, useWindow })\r\n    effect({ prevPos: position.current, currPos })\r\n    position.current = currPos\r\n    throttleTimeout = null\r\n  }\r\n\r\n  useLayoutEffect(() => {\r\n    const handleScroll = () => {\r\n      if (wait) {\r\n        if (throttleTimeout === null) {\r\n          throttleTimeout = setTimeout(callBack, wait)\r\n        }\r\n      } else {\r\n        callBack()\r\n      }\r\n    }\r\n\r\n    window.addEventListener('scroll', handleScroll)\r\n\r\n    return () => window.removeEventListener('scroll', handleScroll)\r\n  }, deps)\r\n}","C:\\Users\\Ilyris\\Desktop\\big_market_app\\src\\reused_components\\PrimaryButton.jsx",[],"C:\\Users\\Ilyris\\Desktop\\big_market_app\\src\\components\\home_page\\HomePage.jsx",["50"],"C:\\Users\\Ilyris\\Desktop\\big_market_app\\src\\reused_components\\SideBar.jsx",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":26,"nodeType":"57","messageId":"58","endLine":1,"endColumn":35},{"ruleId":"55","severity":1,"message":"59","line":25,"column":9,"nodeType":"57","messageId":"58","endLine":25,"endColumn":17},{"ruleId":"55","severity":1,"message":"60","line":121,"column":7,"nodeType":"57","messageId":"58","endLine":121,"endColumn":14},{"ruleId":"61","severity":1,"message":"62","line":32,"column":29,"nodeType":"63","endLine":32,"endColumn":55},{"ruleId":"55","severity":1,"message":"64","line":73,"column":7,"nodeType":"57","messageId":"58","endLine":73,"endColumn":17},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'location' is assigned a value but never used.","'StyledA' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'throttleTimeout' variable from inside React Hook useLayoutEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useLayoutEffect.","CallExpression","'ListingImg' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]